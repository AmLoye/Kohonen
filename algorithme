#source("init_parametres.R")

#creation d'un jeu de vecteurs selon une loi uniforme sur [|0, l|]^d
X = array(dim = c(N, p))
for (i in 1:N){
  for (j in 1:p){
    #X[i, j] = sample(l, size=1)
    X[i, j] = l*runif(1)
  }
}

#Initialisation aleatoire des vecteurs W_i sur [|0, l|]^d
W = array(dim = c(I[1],I[2], p))
for (i in 1:I[1]){
  for (j in 1:I[2]){
    for(k in 1:p){
      W[i, j, k] = l*runif(1)
    }
    
  }
}

points(W[,,1],W[,,2],col='red')

competition = function(x, W){
  #phase de competition : désigne l'unité gagnante pour un vecteur x de l'espace des données
  argmin = c(1,1)
  min = dist(x, W[1,1,], p)
  for (i in 1:I[1]){
    for (j in 1:I[2]){
      if (dist(x, W[i,j,], p) < min){
        argmin = c(i,j)
        min = dist(x, W[i,j,], p)
      }
      if (dist(x, W[i,j,], p) == min){
        argmin = min_lexicographique(c(i,j), argmin, d)
      }
    }

  }
  return(argmin)
}

cooperation = function(t, W, x, i_etoile, d){
  for (i in 1:I[1]){
    for (j in 1:I[2]){
      W[i,j,] = W[i,j,] - epsilon(t)*delta(t, i_etoile, c(i, j), d)*(W[i,j,] - x)

    }
  }
  return(W)
}



for (t in 1:M){
  x = X[sample(N, size = 1),] #un vecteur de l'espace des donnees est choisi aléatoirement
  i_etoile = competition(x, W)
  W = cooperation(t, W, x, i_etoile, d)
}
points(W[,,1],W[,,2],col='green')
